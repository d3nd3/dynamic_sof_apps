==========================================
==Of Which Area(inherit rect)==
• blank
• hr (horizontal rule) - <hbr> + <hr> + <hbr> {width configurable and color}
• vbar
• text - is clickable ( like a button? ) (Could not figure out what regular keyword does here, used by text_c::SetXY())
• ctext - can use atext(supports tab)
• image
• list - cycleThroughListText , can use atext(supports tab)
• slider
• ticker
• input - history (up/down arrow cycle history. If cvar becomes empty (cleared), it is saved in the history, navigate with up down arrows) , global - The area does not have to be highlighted to accept text.
eg.
<input cvar dd width 426 history global maxchars 256 key ENTER "zero dd">
• setkey - can use atext(supports tab)
• popup
• selection - Used with command key mouse1  "select pistol1" and "set pistol1 0 w" and pistol_info
• ghoul
• gpm
• filebox - {root,base,ext} - {backfill,sort(name,rname,size,rsize,time,rtime),talign(left,right,center)} - Displays a list of files from a given directory from which the user can select one. - 
eg. 
menu fxfile ... menu b_start
<filebox “menus” “*” “rmf” cvar out_filename>
<filebox "maps" "dm/*" "bsp" sort name align center cvar menu_map>
<filebox "pics/sky" "*" "txt">

WARNING: Crashes if you put extra keyword, instead of cvar
rname, rtime, rsize = reverse

tint = txt color
atint = txt color on highlight
btint = background color on highlight
ctint = unused
dtint = unused

• filereq - {root,base,ext} - {backfill,sort(name,rname,size,rsize,time,rtime),talign(left,right,center)}
Same as filebox , but includes Parent directory, and output filename includes file extension. Doesn't give

tint = text color
atint = txt color on hover
btint = background color on hover
ctint = folder txt color normal
dtint = folder txt color hover

WARNING: Empty directory can't go back?

• loadbox
• serverbox
• serverdetail
• players
• listfile
• users
• chat
• rooms
================================================
==Of Which Layout==
• tint - <tint spm_tint_menu_background 0xE7000000>
• font - {type,tint,atint}
• br (line break - changes layout switch behaviour) (Horizontal+Vertical)
A carriage return. This moves the current “next area position” down the height of the current font and to the left of the frame. If this is not a valid position, it will continue moving down until it is. Whenever the layout control is changed (i.e. a <right> or <center> keyword is encountered), the “next area postion” is set to the top of the page.
• hbr (line break - changes layout switch behaviour) (Horizontal Only)
A carriage return. This works exactly the same as <br> with the exception that the “next area position” is not reset to the top on a layout change. All following areas appear below the previous area.
• center
• normal
• left
• right
• cursor
• defaults
• translate
• emote //linunx only
• semote //linux only
• demote //linux only
• autoscroll
• dmnames //linux only
• tab - can be used with atext {ctext list setkey} or multiple for big tables{serverbox etc}
• strings
• bghoul ( loads ghoul which _IS_ an area/rect )
• backdrop

==Of Which Control==
• stm
• /stm
• frame
• key
• ikey
• ckey
• comment
• includecvar
• include
• cinclude - <cvar> if clear <Page>
• cninclude - <cvar> if not clear <Page>
• exinclude - <setPage> <unsetPage>
• einclude - <cvar> eq <value> <Page>
• alias
• set
• fset
• cbuf
• config
• exitcfg
• timeout
================================================
==Of WHich undocumented==
• hbar - Loading Bullet (Progress Bar) {invisible}
 eg. <hbar BACKGROUND BAR_ITEM cvar PROGRESS_CVAR invisible>
  0 -> 1
invisible - the object disappears if PROGRESS_CVAR == 0
• botlist - Bot viewing
• bot - Bot selection
• onexit //undocumented onexit <Conditional Cvar> <MenuFile>
    eg. <onexit menu_settings_changed "altervid">

